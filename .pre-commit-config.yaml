# .pre-commit-config.yaml
# Pre-commit hooks for TorchLite

default_stages: [pre-commit]
fail_fast: false

repos:
  # General fixes
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-toml
      - id: check-added-large-files
        args: ["--maxkb=1000"]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-ast
      - id: debug-statements
      - id: detect-private-key
      - id: fix-byte-order-marker
      - id: mixed-line-ending
        args: ["--fix=lf"]

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3
        args: ["--line-length=100"]

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: ["--profile=black", "--line-length=100"]

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        args:
          [
            "--max-line-length=100",
            "--extend-ignore=E203,E266,E501,W503",
            "--max-complexity=10",
            "--select=B,C,E,F,W,T4,B9",
          ]
        additional_dependencies:
          ["flake8-bugbear", "flake8-comprehensions", "flake8-simplify"]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        args:
          [
            "--ignore-missing-imports",
            "--disallow-untyped-defs",
            "--no-implicit-optional",
            "--warn-redundant-casts",
            "--warn-unused-ignores",
          ]
        additional_dependencies: [numpy, types-tqdm]
        files: ^torchlite/

  # Security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.6
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]

  # Docstring formatting
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args:
          [
            "--convention=google",
            "--add-ignore=D100,D101,D102,D103,D104,D105,D106,D107",
          ]
        files: ^torchlite/.*\.py$

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, markdown, json]
        args: ["--prose-wrap=always"]

  # Shell script analysis
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.45.0
    hooks:
      - id: markdownlint
        args: ["--fix"]

  # Local hooks
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest tests/test_tensor.py -v --tb=short -q
        language: system
        pass_filenames: false
        always_run: true
        stages: [pre-push]

      - id: no-print-statements
        name: No print statements in library code
        entry: 'print\('
        language: pygrep
        types: [python]
        files: ^torchlite/.*\.py$
        exclude: ^(tests/|examples/|setup\.py)

      - id: no-fixme
        name: No FIXME/TODO in code
        entry: "(FIXME|TODO|XXX|HACK|BUG):"
        language: pygrep
        types: [python]
        files: ^torchlite/

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ""
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: weekly
  skip: [mypy, pytest-check]
  submodules: false
