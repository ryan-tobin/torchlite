# .gitignore for TorchLite

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
docs/_static/
docs/_templates/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints
*.ipynb

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# VS Code
.vscode/
*.code-workspace

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# TorchLite specific
*.pth
*.pkl
*.model
checkpoints/
logs/
runs/
wandb/
mlruns/
outputs/
results/
models/
data/
datasets/
.torchlite/

# Generated files from examples
gan_samples.png
*.png
*.jpg
*.jpeg
*.gif

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# Test outputs
test_results/
test_outputs/
benchmarks/results/

# Debug files
debug_*.py
test_*.py
!tests/test_*.py

# Documentation build
docs/build/
docs/api/
docs/source/generated/

# Versioning
torchlite/_version.py

# Package files
*.whl
*.tar.gz

# Profiling
*.prof
*.lprof
.profile

# Memory dumps
*.hprof
*.heap

# Coverage reports
.coverage.*
coverage/
htmlcov/

# Benchmark results
.benchmarks/

# Virtual environments with different names
.venv*/
venv*/
virtualenv/
env*/

# Editor backup files
*.bak
*.backup

# Lock files (optional - uncomment if you don't want to track these)
# Pipfile.lock
# poetry.lock
# package-lock.json
# yarn.lock

# Generated by setup.py
torchlite.egg-info/

# Compiled documentation
*.doctree

# Temporary test files
test_temp/
tmp_test/

# Performance profiling
perf/
*.perf

# Model weights and checkpoints (but keep example weights if needed)
weights/
*.weights
*.ckpt

# Data files (but keep small example data)
*.csv
*.tsv
*.h5
*.hdf5
*.parquet
!examples/data/*.csv  # Keep example CSVs if any

# Logs
*.log
logs/
*.out
*.err

# IDE specific
.project
.pydevproject
.settings/

# Temporary directories
temp/
tmp/
cache/

# OS generated
.Spotlight-V100
.Trashes

# Security
.env.local
.env.*.local
secrets/
*.key
*.pem

# Ignore large binary files
*.bin
*.dat

# Ignore user-specific configuration
config.local.json
*.local.yml

# Keep important files
!requirements.txt
!setup.py
!pyproject.toml
!README.md
!LICENSE
!CONTRIBUTING.md
!.github/
!docs/conf.py
!docs/index.rst

__pycache__/
*.py[cod]
*$py.class
*.pyc
*.pyo
*.pyd
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg